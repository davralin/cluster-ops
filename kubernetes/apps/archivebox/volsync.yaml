---
apiVersion: v1
kind: Secret
metadata:
  name: archivebox-volsync-secret
  namespace: archivebox
type: Opaque
stringData:
  RESTIC_REPOSITORY: "s3:${SECRET_S3_URL}/volsync-home-k8s/archivebox"
  #RESTIC_REPOSITORY: "s3:${SECRET_S3_URL}/volsync-${CLUSTER_NAME}/archivebox"
  RESTIC_PASSWORD: "${SECRET_VOLSYNC_RESTIC_PWD}"
  AWS_ACCESS_KEY_ID: "${SECRET_VOLSYNC_ACCESS_KEYS}"
  AWS_SECRET_ACCESS_KEY: "${SECRET_VOLSYNC_SECRET_KEYS}"
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: archivebox-volsync
  namespace: archivebox
spec:
  interval: 15m
  chart:
    spec:
      chart: raw
      version: v0.3.2
      sourceRef:
        kind: HelmRepository
        name: dysnix-charts
        namespace: flux-system
  targetNamespace: archivebox
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  dependsOn:
    - name: volsync
      namespace: flux-system
    #- name: archivebox
    #  namespace: flux-system
  values:
    resources:
      #- apiVersion: volsync.backube/v1alpha1
      #  kind: ReplicationSource
      #  metadata:
      #    name: archivebox
      #    namespace: archivebox
      #  spec:
      #    sourcePVC: archivebox
      #    trigger:
      #      schedule: "04 01 * * *"
      #    restic:
      #      copyMethod: Snapshot
      #      pruneIntervalDays: 7
      #      repository: archivebox-volsync-secret
      #      moverSecurityContext:
      #        runAsUser: 1000
      #        runAsGroup: 1000
      #        fsGroup: 1000
      #      retain:
      #        daily: 7
      #        within: 3d
      - apiVersion: volsync.backube/v1alpha1
        kind: ReplicationDestination
        metadata:
          name: archivebox
          namespace: archivebox
        spec:
          trigger:
            manual: restore-once
          restic:
            repository: archivebox-volsync-secret
            # Use an existing PVC, don't provision a new one
            destinationPVC: archivebox
            copyMethod: Direct
            cacheAccessModes: ["ReadWriteOnce"]
            moverSecurityContext:
              runAsUser: 1000
              runAsGroup: 1000
              fsGroup: 1000
              fsGroupChangePolicy: "OnRootMismatch"
              runAsNonRoot: true
              seccompProfile:
                type: RuntimeDefault