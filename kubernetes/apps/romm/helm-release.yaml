---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &name romm
  namespace: flux-system
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 4.3.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
      interval: 30m
  targetNamespace: romm
  install:
    createNamespace: true
    remediation:
      retries: 10
  upgrade:
    remediation:
      retries: 10
  values:
    fullnameOverride: *name
    defaultPodOptions:
      automountServiceAccountToken: false
      enableServiceLinks: false
      securityContext:
        runAsUser: 0
        runAsGroup: 0
        fsGroup: 0
        fsGroupChangePolicy: "OnRootMismatch"
        runAsNonRoot: false
        seccompProfile:
          type: RuntimeDefault
    controllers:
      romm:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          romm:
            image:
              repository: ghcr.io/rommapp/romm
              tag: 4.2.0@sha256:7750c09db727c0b4d9225fea518dcef94142e7d2b2dbcfb451e904e66a05f8ec
            envFrom:
              - secretRef:
                  name: romm-secrets
            env:
              DB_HOST: "romm-postgres-v17-rw.romm.svc.cluster.local"
              DB_NAME: "romm"
              DB_USER:
                valueFrom:
                  secretKeyRef:
                    name: romm-basic-auth
                    key: username
              DB_PASSWD:
                valueFrom:
                  secretKeyRef:
                    name: romm-basic-auth
                    key: password
              DB_PORT: "5432"
              ENABLE_SCHEDULED_UPDATE_LAUNCHBOX_METADATA: "true"
              LAUNCHBOX_API_ENABLED: "true"
              HASHEOUS_API_ENABLED: "true"
              PLAYMATCH_API_ENABLED: "true"
              ROMM_DB_DRIVER: "postgresql"
              REDIS_HOST: "valkey-primary.romm.svc.cluster.local"
              REDIS_PORT: "6379"
              HLTB_API_ENABLED: "true"
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              # [emerg] 33#33: chown("/tmp/client_body", 1000) failed (1: Operation not permitted)
              #capabilities: { drop: ["ALL"] }
            resources:
              requests:
                memory: 512M
                cpu: 10m
              limits:
                memory: 1024M
    service:
      romm:
        controller: *name
        ports:
          http:
            port: 8080
    ingress:
      romm:
        enabled: true
        annotations:
          haproxy.org/allow-list: "${HAPROXY_WHITELIST}"
          haproxy.org/ssl-redirect-port: "443"
          haproxy.org/response-set-header: |
            Strict-Transport-Security "max-age=31536000"
            X-Frame-Options "DENY"
            X-Content-Type-Options "nosniff"
            Referrer-Policy "strict-origin-when-cross-origin"
        hosts:
          - host: &host "romm.${SECRET_DEFAULT_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: romm
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      config:
        enabled: true
        existingClaim: romm
        advancedMounts:
          romm:
            romm:
              - path: /bios
                subPath: bios
              - path: /romm
                subPath: romm
              - path: /roms
                subPath: roms
      # OSError: [Errno 30] Read-only file system: '/tmp/tmpzxo8orzh'
      tmp:
        type: emptyDir
        globalMounts:
          - path: /tmp
      # /docker-entrypoint.d/20-envsubst-on-templates.sh: line 53: can't create /etc/nginx/conf.d/default.conf: Read-only file system
      nginx:
        type: emptyDir
        globalMounts:
          - path: /etc/nginx/conf.d/