---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &name paperless-ngx
  namespace: flux-system
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 4.3.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
      interval: 30m
  targetNamespace: paperless-ngx
  install:
    createNamespace: true
    remediation:
      retries: 10
  upgrade:
    remediation:
      retries: 10
  valuesFrom:
    - targetPath: controllers.paperless-ngx.containers.paperless-ngx.env.PAPERLESS_DBPASS
      kind: Secret
      name: paperless-secrets
      valuesKey: postgresql-password
    - targetPath: controllers.paperless-ngx.containers.paperless-ngx.env.PAPERLESS_ADMIN_USER
      kind: Secret
      name: paperless-secrets
      valuesKey: paperless-admin-user
    - targetPath: controllers.paperless-ngx.containers.paperless-ngx.env.PAPERLESS_ADMIN_PASSWORD
      kind: Secret
      name: paperless-secrets
      valuesKey: paperless-admin-pw
    - targetPath: controllers.paperless-ngx.containers.paperless-ngx.env.PAPERLESS_ADMIN_EMAIL
      kind: Secret
      name: paperless-secrets
      valuesKey: paperless-admin-email
  values:
    fullnameOverride: *name
    defaultPodOptions:
      automountServiceAccountToken: false
      enableServiceLinks: false
      securityContext:
      # E: List directory /var/lib/apt/lists/partial is missing. - Acquire (13: Permission denied)
        runAsUser: 0
        runAsGroup: 0
        fsGroup: 0
        fsGroupChangePolicy: "OnRootMismatch"
        runAsNonRoot: false
        seccompProfile:
          type: RuntimeDefault
    controllers:
      paperless-ngx:
        containers:
          paperless-ngx:
            image:
              repository: ghcr.io/paperless-ngx/paperless-ngx
              tag: 2.18.4
            env:
              PAPERLESS_TIME_ZONE: "${TIMEZONE}"
              PAPERLESS_OCR_LANGUAGE: "nor+eng"
              PAPERLESS_OCR_LANGUAGES: "nor"
              PAPERLESS_REDIS: "redis://valkey-primary"
              # Changing this breaks app-template:
              PAPERLESS_FILENAME_FORMAT: "{created_year}/{correspondent}/{created_month}_{title}"
              PAPERLESS_URL: "https://paperless-ngx.${SECRET_DEFAULT_DOMAIN}"
              PAPERLESS_DBHOST: "paperless-ngx-postgres-v17-rw.paperless-ngx.svc.cluster.local"
              PAPERLESS_DBNAME: "paperless-ngx"
              PAPERLESS_DBUSER: "paperless-ngx"
              PAPERLESS_TIKA_ENABLED: "1"
              PAPERLESS_TIKA_ENDPOINT: "http://localhost:9998"
              PAPERLESS_TIKA_GOTENBERG_ENDPOINT: "http://localhost:3000"
              PAPERLESS_CONSUMER_POLLING: 3600
              PAPERLESS_CONSUMER_RECURSIVE: true
              PAPERLESS_CONSUMPTION_DIR: /usr/src/paperless/consume
            securityContext:
              allowPrivilegeEscalation: false
              # E: List directory /var/lib/apt/lists/partial is missing. - Acquire (30: Read-only file system)
              readOnlyRootFilesystem: false
              # E: setgroups 65534 failed - setgroups (1: Operation not permitted)
              #capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 50m
                memory: 1Gi
              limits:
                memory: 2Gi
          tika:
            image: 
              repository: ghcr.io/paperless-ngx/tika
              tag: 2.9.1-minimal
            securityContext:
              allowPrivilegeEscalation: false
              # java.util.concurrent.ExecutionException: java.nio.file.FileSystemException: /tmp/apache-tika-server-forked-tmp-14715358992636831581: Read-only file system
              readOnlyRootFilesystem: false
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
                memory: 400Mi
              limits:
                memory: 800Mi
          gotenberg:
            image: 
              repository: docker.io/gotenberg/gotenberg
              tag: "8.23.0"
            command: ['/usr/bin/gotenberg']
            args: ['--chromium-disable-javascript=true', '--chromium-allow-list=file:///tmp/.*']
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
                memory: 50Mi
              limits:
                memory: 100Mi
    service:
      paperless-ngx:
        controller: *name
        ports:
          http:
            port: 8000
    ingress:
      paperless-ngx:
        enabled: true
        annotations:
          haproxy.org/allow-list: "${HAPROXY_WHITELIST}"
          haproxy.org/ssl-redirect-port: "443"
          haproxy.org/response-set-header: |
            Strict-Transport-Security "max-age=31536000"
            X-Frame-Options "SAMEORIGIN"
            X-Content-Type-Options "nosniff"
            Referrer-Policy "strict-origin-when-cross-origin"
        hosts:
          - host: &host "paperless-ngx.${SECRET_DEFAULT_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: paperless-ngx
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      config:
        enabled: true
        existingClaim: paperless-ngx
        advancedMounts:
          paperless-ngx:
            paperless-ngx:
              - path: /usr/src/paperless/data
                subPath: data
              - path: /usr/src/paperless/consume
                subPath: consume
              - path: /usr/src/paperless/media
                subPath: media
      export:
        enabled: true
        existingClaim: paperless-ngx-export
        advancedMounts:
          paperless-ngx:
            paperless-ngx:
              - path: /export
                subPath: .
                readOnly: true