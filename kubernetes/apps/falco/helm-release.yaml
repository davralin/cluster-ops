---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &name falco
  namespace: flux-system
spec:
  interval: 30m
  chart:
    spec:
      chart: falco
      version: 4.20.1
      sourceRef:
        kind: HelmRepository
        name: falco-charts
        namespace: flux-system
      interval: 30m
  targetNamespace: falco
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 10
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 10
  uninstall:
    keepHistory: false
  values:
    fullnameOverride: *name
    metrics:
      enabled: "${MONITORING_PROMETHEUS}"
    serviceMonitor:
      create: "${MONITORING_PROMETHEUS}"
    grafana:
      dashboards:
        enabled: "${MONITORING_PROMETHEUS}"
    falco:
      http_output:
        enabled: true
        url: "http://sidekick.falco.svc.cluster.local:2801/"
    falcoctl:
      artifact:
        install:
          enabled: true
        follow:
          enabled: true
      config:
        artifact:
          install:
            refs: [falco-rules:latest, falco-incubating-rules:latest, k8saudit-rules:latest]
          follow:
            refs: [falco-rules:latest, falco-incubating-rules:latest, k8saudit-rules:latest]
    falcosidekick:
      enabled: true
      fullnameOverride: "sidekick"
      grafana:
        dashboards:
          enabled: "${MONITORING_PROMETHEUS}"
      prometheusRules:
        enabled: "${MONITORING_PROMETHEUS}"
      serviceMonitor:
        create: "${MONITORING_PROMETHEUS}"
      replicaCount: 1
      config:
        discord:
          webhookurl: "${SECRET_DISCORD_FALCO_URL}"
        loki:
          grafanaDashboard:
            enabled: false
      webui:
        enabled: true
        ingress:
          enabled: true
          annotations:
            haproxy.org/allow-list: "${HAPROXY_WHITELIST}"
            haproxy.org/response-set-header: |
              Strict-Transport-Security "max-age=31536000"
              X-Frame-Options "DENY"
              X-Content-Type-Options "nosniff"
              Referrer-Policy "no-referrer-when-downgrade"
          hosts:
            - host: &host "falco.${SECRET_DEFAULT_DOMAIN}"
              paths:
                - path: /
                  service:
                    identifier: app
                    port: http
          tls:
            - hosts:
                - *host
        replicaCount: 1
        redis:
          storageEnabled: false
    tty: true
    customRules:
      custom-rules.yaml: |-
        - rule: Contact K8S API Server From Container
          desc: >
            Detect attempts to communicate with the K8S API Server from a container by non-profiled users. Kubernetes APIs play a
            pivotal role in configuring the cluster management lifecycle. Detecting potential unauthorized access to the API server
            is of utmost importance. Audit your complete infrastructure and pinpoint any potential machines from which the API server
            might be accessible based on your network layout. If Falco can't operate on all these machines, consider analyzing the
            Kubernetes audit logs (typically drained from control nodes, and Falco offers a k8saudit plugin) as an additional data
            source for detections within the control plane.
            This rule is tailored to my lab
          condition: >
            evt.type=connect and evt.dir=<
            and (fd.typechar=4 or fd.typechar=6)
            and container
            and k8s_api_server
            and not k8s_containers
            and not user_known_contact_k8s_api_server_activities
            and not (container.name = "awx-task" and k8s.ns.name = "awx")
            and not ( (container.name = "grafana-sc-dashboard" or container.name = "grafana-sc-datasources") and k8s.ns.name = "monitoring")
            and not (container.name = "node-problem-detector" and k8s.ns.name = "node-problem-detector")
          output: Unexpected connection to K8s API Server from container (connection=%fd.name lport=%fd.lport rport=%fd.rport fd_type=%fd.type fd_proto=%fd.l4proto evt_type=%evt.type user=%user.name user_uid=%user.uid user_loginuid=%user.loginuid process=%proc.name proc_exepath=%proc.exepath parent=%proc.pname command=%proc.cmdline terminal=%proc.tty %container.info)
          priority: NOTICE
          tags: [maturity_stable, container, network, k8s, mitre_discovery, T1565]