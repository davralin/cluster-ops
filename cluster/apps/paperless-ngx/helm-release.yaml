---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &name paperless-ngx
  namespace: paperless-ngx
spec:
  interval: 5m
  chart:
    spec:
      chart: app-template
      version: 2.1.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
      interval: 5m
  targetNamespace: paperless-ngx
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  valuesFrom:
    - targetPath: controllers.main.containers.main.env.PAPERLESS_DBPASS
      kind: Secret
      name: paperless-secrets
      valuesKey: postgresql-password
    - targetPath: controllers.main.containers.main.env.PAPERLESS_ADMIN_USER
      kind: Secret
      name: paperless-secrets
      valuesKey: paperless-admin-user
    - targetPath: controllers.main.containers.main.env.PAPERLESS_ADMIN_PASSWORD
      kind: Secret
      name: paperless-secrets
      valuesKey: paperless-admin-pw
    - targetPath: controllers.main.containers.main.env.PAPERLESS_ADMIN_EMAIL
      kind: Secret
      name: paperless-secrets
      valuesKey: paperless-admin-email
  values:
    fullnameOverride: *name
    #defaultPodOptions:
      #securityContext:
        #runAsUser: 1000
        #runAsGroup: 1000
        #fsGroup: 1000
        #fsGroupChangePolicy: "OnRootMismatch"
    controllers:
      main:
        containers:
          main:
            image:
              repository: ghcr.io/paperless-ngx/paperless-ngx
              tag: 1.17.4
            env:
              PAPERLESS_TIME_ZONE: "${TIMEZONE}"
              PAPERLESS_OCR_LANGUAGE: "nor+eng"
              PAPERLESS_OCR_LANGUAGES: "nor"
              PAPERLESS_REDIS: "redis://redis-master"
              PAPERLESS_FILENAME_FORMAT: "{created_year}/{correspondent}/{created_month}_{title}"
              PAPERLESS_URL: "https://paperless-ngx.${SECRET_DEFAULT_DOMAIN}"
              PAPERLESS_DBHOST: "postgres-v16-rw.cloudnative-pg.svc.cluster.local"
              PAPERLESS_DBNAME: "paperless-ngx"
              PAPERLESS_DBUSER: "paperless-ngx"
              PAPERLESS_TIKA_ENABLED: "1"
              PAPERLESS_TIKA_ENDPOINT: "http://localhost:9998"
              PAPERLESS_TIKA_GOTENBERG_ENDPOINT: "http://localhost:3000"
              PAPERLESS_CONSUMER_POLLING: 3600
              PAPERLESS_CONSUMER_RECURSIVE: true
              PAPERLESS_CONSUMPTION_DIR: /usr/src/paperless/consume
            resources:
              requests:
                cpu: 100m
                memory: 300Mi
              limits:
                memory: 4000Mi
          tika:
            image: 
              repository: ghcr.io/paperless-ngx/tika
              tag: 2.9.0-minimal
          gotenberg:
            image: 
              repository: docker.io/gotenberg/gotenberg
              tag: "7.9.2"
    service:
      main:
        ports:
          http:
            port: 8000
    ingress:
      main:
        enabled: true
        annotations:
          haproxy.org/whitelist: "${HAPROXY_WHITELIST}"
          haproxy.org/response-set-header: |
            Strict-Transport-Security "max-age=31536000"
            X-Frame-Options "SAMEORIGIN"
            X-Content-Type-Options "nosniff"
            Referrer-Policy "no-referrer-when-downgrade"
        hosts:
          - host: "paperless-ngx.${SECRET_DEFAULT_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  name: main
                  port: http
        tls:
          - secretName: "${SECRET_DEFAULT_DOMAIN_CERT}"
    persistence:
      config:
        enabled: true
        existingClaim: paperless-ngx-data
        globalMounts:
          - path: /usr/src/paperless/data
      consume:
        enabled: true
        existingClaim: paperless-ngx-consume
        globalMounts:
          - path: /usr/src/paperless/consume
      media:
        enabled: true
        existingClaim: paperless-ngx-media
        globalMounts:
          - path: /usr/src/paperless/media