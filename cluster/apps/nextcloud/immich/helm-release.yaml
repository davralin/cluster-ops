---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &name immich
  namespace: nextcloud
spec:
  interval: 5m
  chart:
    spec:
      chart: app-template
      version: 2.3.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
      interval: 5m
  targetNamespace: nextcloud
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  valuesFrom:
    - targetPath: controllers.main.containers.main.env.DB_PASSWORD
      kind: Secret
      name: immich-secrets
      valuesKey: password
    - targetPath: controllers.main.containers.microservices.env.DB_PASSWORD
      kind: Secret
      name: immich-secrets
      valuesKey: password
    - targetPath: controllers.main.containers.main.env.TYPESENSE_API_KEY
      kind: Secret
      name: immich-secrets
      valuesKey: typesense_api_key
    - targetPath: controllers.main.containers.microservices.env.TYPESENSE_API_KEY
      kind: Secret
      name: immich-secrets
      valuesKey: typesense_api_key
    - targetPath: controllers.main.containers.typesense.env.TYPESENSE_API_KEY
      kind: Secret
      name: immich-secrets
      valuesKey: typesense_api_key
  values:
    fullnameOverride: *name
    controllers:
      main:
        containers:
          main:
            image:
              repository: ghcr.io/immich-app/immich-server
              tag: v1.90.0
            command: [ "/usr/src/app/start.sh", "immich" ]
            env:
              TZ: "${TIMEZONE}"
              REDIS_HOSTNAME: "redis-immich-master"
              DB_HOSTNAME: "postgres-v16-rw.cloudnative-pg.svc.cluster.local"
              DB_USERNAME: "immich"
              DB_DATABASE_NAME: "immich"
              TYPESENSE_HOST: "localhost"
              UPLOAD_LOCATION: "/upload"
            resources: []
          microservices:
            image:
              repository: ghcr.io/immich-app/immich-server
              tag: v1.90.0
            command: [ "/usr/src/app/start.sh", "microservices" ]
            env:
              TZ: "${TIMEZONE}"
              REDIS_HOSTNAME: "redis-immich-master"
              DB_HOSTNAME: "postgres-v16-rw.cloudnative-pg.svc.cluster.local"
              DB_USERNAME: "immich"
              DB_DATABASE_NAME: "immich"
              TYPESENSE_HOST: "localhost"
              UPLOAD_LOCATION: "/upload"
            resources: []
          machine-learning:
            image:
              repository: ghcr.io/immich-app/immich-machine-learning
              tag: v1.90.0
            env:
              TZ: "${TIMEZONE}"
            resources: []
          typesense:
            image:
              repository: typesense/typesense
              tag: 0.25.1@sha256:035ccfbc3fd8fb9085ea205fdcb62de63eaefdbebd710e88e57f978a30f2090d
            env:
              TZ: "${TIMEZONE}"
              TYPESENSE_DATA_DIR: "/data"
              GLOG_minloglevel: "1"
            resources: []
    service:
      main:
        ports:
          http:
            port: 3001
    ingress:
      main:
        enabled: true
        annotations:
          haproxy.org/response-set-header: |
            Strict-Transport-Security "max-age=31536000"
            X-Frame-Options "SAMEORIGIN"
            X-Content-Type-Options "nosniff"
            Referrer-Policy "no-referrer-when-downgrade"
        hosts:
          - host: "immich.${SECRET_DEFAULT_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  name: main
                  port: http
        tls:
          - secretName: "${SECRET_DEFAULT_DOMAIN_CERT}"
    persistence:
      config:
        enabled: true
        existingClaim: nextcloud
        advancedMounts:
          main:
            main:
              - path: /mnt/nextcloud
                readOnly: true
                subPath: data/mikr/files/Bilder
            microservices:
              - path: /mnt/nextcloud
                readOnly: true
                subPath: data/mikr/files/Bilder
      upload:
        enabled: true
        existingClaim: upload
        advancedMounts:
          main:
            main:
              - path: /upload
            microservices:
              - path: /upload
      typesense:
        enabled: true
        existingClaim: typesense
        advancedMounts:
          main:
            typesense:
              - path: /data
      modelcache:
        enabled: true
        existingClaim: modelcache
        advancedMounts:
          main:
            machine-learning:
              - path: /cache